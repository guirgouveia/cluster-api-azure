apiVersion: v1
data:
  azurefile-csi.yaml: |
    ---
    apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      name: azurefile-csi
    provisioner: file.csi.azure.com
    allowVolumeExpansion: true
    parameters:
      skuName: Standard_RAGRS
      storageAccount: capzpoc
      location: brazilsouth
      resourceGroup: "/subscriptions/37ff287b-6ef8-4462-87c7-eb78102817e7/resourceGroups/capz-poc"
      subscriptionID: "/subscriptions/37ff287b-6ef8-4462-87c7-eb78102817e7"
      storeAccountKey: "false"
    reclaimPolicy: Delete
    volumeBindingMode: Immediate
    mountOptions:
      - dir_mode=0777
      - file_mode=0777
      - mfsymlinks
      - cache=strict  # https://linux.die.net/man/8/mount.cifs
      - nosharesock  # reduce probability of reconnect race
      - actimeo=30  # reduce latency for metadata-heavy workload
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: csi-azurefile-node-sa
      namespace: kube-system

    ---
    kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: csi-azurefile-node-secret-role
    rules:
      - apiGroups: [""]
        resources: ["secrets"]
        verbs: ["get"]

    ---
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: csi-azurefile-node-secret-binding
    subjects:
      - kind: ServiceAccount
        name: csi-azurefile-node-sa
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: csi-azurefile-node-secret-role
      apiGroup: rbac.authorization.k8s.io
    ---
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: csi-azurefile-controller
      namespace: kube-system
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: csi-azurefile-controller
      template:
        metadata:
          labels:
            app: csi-azurefile-controller
        spec:
          hostNetwork: true  # only required for MSI enabled cluster
          serviceAccountName: csi-azurefile-controller-sa
          nodeSelector:
            kubernetes.io/os: linux  # add "kubernetes.io/role: master" to run controller on master node
          priorityClassName: system-cluster-critical
          tolerations:
            - key: "node-role.kubernetes.io/master"
              operator: "Exists"
              effect: "NoSchedule"
            - key: "node-role.kubernetes.io/controlplane"
              operator: "Exists"
              effect: "NoSchedule"
            - key: "node-role.kubernetes.io/control-plane"
              operator: "Exists"
              effect: "NoSchedule"
          containers:
            - name: csi-provisioner
              image: mcr.microsoft.com/oss/kubernetes-csi/csi-provisioner:v3.3.0
              args:
                - "-v=2"
                - "--csi-address=$(ADDRESS)"
                - "--leader-election"
                - "--leader-election-namespace=kube-system"
                - "--timeout=300s"
                - "--extra-create-metadata=true"
                - "--kube-api-qps=50"
                - "--kube-api-burst=100"
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
              volumeMounts:
                - mountPath: /csi
                  name: socket-dir
              resources:
                limits:
                  memory: 500Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
            - name: csi-attacher
              image: mcr.microsoft.com/oss/kubernetes-csi/csi-attacher:v4.0.0
              args:
                - "-v=2"
                - "-csi-address=$(ADDRESS)"
                - "-timeout=120s"
                - "--leader-election"
                - "--leader-election-namespace=kube-system"
                - "--kube-api-qps=50"
                - "--kube-api-burst=100"
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
              volumeMounts:
                - mountPath: /csi
                  name: socket-dir
              resources:
                limits:
                  memory: 500Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
            - name: csi-snapshotter
              image: mcr.microsoft.com/oss/kubernetes-csi/csi-snapshotter:v5.0.1
              args:
                - "-v=2"
                - "-csi-address=$(ADDRESS)"
                - "--leader-election"
                - "--leader-election-namespace=kube-system"
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
              volumeMounts:
                - name: socket-dir
                  mountPath: /csi
              resources:
                limits:
                  memory: 100Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
            - name: csi-resizer
              image: mcr.microsoft.com/oss/kubernetes-csi/csi-resizer:v1.6.0
              args:
                - "-csi-address=$(ADDRESS)"
                - "-v=2"
                - "--leader-election"
                - "--leader-election-namespace=kube-system"
                - '-handle-volume-inuse-error=false'
                - '-feature-gates=RecoverVolumeExpansionFailure=true'
                - '-timeout=120s'
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
              volumeMounts:
                - name: socket-dir
                  mountPath: /csi
              resources:
                limits:
                  memory: 500Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
            - name: liveness-probe
              image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.8.0
              args:
                - --csi-address=/csi/csi.sock
                - --probe-timeout=3s
                - --health-port=29612
                - --v=2
              volumeMounts:
                - name: socket-dir
                  mountPath: /csi
              resources:
                limits:
                  memory: 100Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
            - name: azurefile
              image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.25.1
              imagePullPolicy: IfNotPresent
              args:
                - "--v=5"
                - "--endpoint=$(CSI_ENDPOINT)"
                - "--metrics-address=0.0.0.0:29614"
                - "--user-agent-suffix=OSS-kubectl"
              ports:
                - containerPort: 29612
                  name: healthz
                  protocol: TCP
                - containerPort: 29614
                  name: metrics
                  protocol: TCP
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /healthz
                  port: healthz
                initialDelaySeconds: 30
                timeoutSeconds: 10
                periodSeconds: 30
              env:
                - name: AZURE_CREDENTIAL_FILE
                  valueFrom:
                    configMapKeyRef:
                      name: azure-cred-file
                      key: path
                      optional: true
                - name: CSI_ENDPOINT
                  value: unix:///csi/csi.sock
              volumeMounts:
                - mountPath: /csi
                  name: socket-dir
                - mountPath: /etc/kubernetes/
                  name: azure-cred
              resources:
                limits:
                  memory: 200Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
          volumes:
            - name: socket-dir
              emptyDir: {}
            - name: azure-cred
              hostPath:
                path: /etc/kubernetes/
                type: DirectoryOrCreate
    ---
    apiVersion: storage.k8s.io/v1
    kind: CSIDriver
    metadata:
      name: file.csi.azure.com
      annotations:
        csiDriver: v1.20.0
        snapshot: v5.0.1
    spec:
      attachRequired: false
      podInfoOnMount: true
      volumeLifecycleModes:
        - Persistent
        - Ephemeral
      fsGroupPolicy: ReadWriteOnceWithFSType
    ---
    kind: DaemonSet
    apiVersion: apps/v1
    metadata:
      name: csi-azurefile-node
      namespace: kube-system
    spec:
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 1
        type: RollingUpdate
      selector:
        matchLabels:
          app: csi-azurefile-node
      template:
        metadata:
          labels:
            app: csi-azurefile-node
        spec:
          hostNetwork: true
          dnsPolicy: Default
          serviceAccountName: csi-azurefile-node-sa
          nodeSelector:
            kubernetes.io/os: linux
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: type
                        operator: NotIn
                        values:
                          - virtual-kubelet
          priorityClassName: system-node-critical
          tolerations:
            - operator: "Exists"
          containers:
            - name: liveness-probe
              volumeMounts:
                - mountPath: /csi
                  name: socket-dir
              image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.8.0
              args:
                - --csi-address=/csi/csi.sock
                - --probe-timeout=3s
                - --health-port=29613
                - --v=2
              resources:
                limits:
                  memory: 100Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
            - name: node-driver-registrar
              image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.6.2
              args:
                - --csi-address=$(ADDRESS)
                - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
                - --v=2
              livenessProbe:
                exec:
                  command:
                    - /csi-node-driver-registrar
                    - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
                    - --mode=kubelet-registration-probe
                initialDelaySeconds: 30
                timeoutSeconds: 15
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: DRIVER_REG_SOCK_PATH
                  value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
              volumeMounts:
                - name: socket-dir
                  mountPath: /csi
                - name: registration-dir
                  mountPath: /registration
              resources:
                limits:
                  memory: 100Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
            - name: azurefile
              image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.25.1
              imagePullPolicy: IfNotPresent
              args:
                - "--v=5"
                - "--endpoint=$(CSI_ENDPOINT)"
                - "--nodeid=$(KUBE_NODE_NAME)"
                - "--metrics-address=0.0.0.0:29615"
              ports:
                - containerPort: 29613
                  name: healthz
                  protocol: TCP
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /healthz
                  port: healthz
                initialDelaySeconds: 30
                timeoutSeconds: 10
                periodSeconds: 30
              env:
                - name: AZURE_CREDENTIAL_FILE
                  valueFrom:
                    configMapKeyRef:
                      name: azure-cred-file
                      key: path
                      optional: true
                - name: CSI_ENDPOINT
                  value: unix:///csi/csi.sock
                - name: KUBE_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
              securityContext:
                privileged: true
              volumeMounts:
                - mountPath: /csi
                  name: socket-dir
                - mountPath: /var/lib/kubelet/
                  mountPropagation: Bidirectional
                  name: mountpoint-dir
                - mountPath: /etc/kubernetes/
                  name: azure-cred
                - mountPath: /dev
                  name: device-dir
              resources:
                limits:
                  memory: 400Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
          volumes:
            - hostPath:
                path: /var/lib/kubelet/plugins/file.csi.azure.com
                type: DirectoryOrCreate
              name: socket-dir
            - hostPath:
                path: /var/lib/kubelet/
                type: DirectoryOrCreate
              name: mountpoint-dir
            - hostPath:
                path: /var/lib/kubelet/plugins_registry/
                type: DirectoryOrCreate
              name: registration-dir
            - hostPath:
                path: /etc/kubernetes/
                type: DirectoryOrCreate
              name: azure-cred
            - hostPath:
                path: /dev
                type: Directory
              name: device-dir
    ---
    ---
    kind: DaemonSet
    apiVersion: apps/v1
    metadata:
      name: csi-azurefile-node-win
      namespace: kube-system
    spec:
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 1
        type: RollingUpdate
      selector:
        matchLabels:
          app: csi-azurefile-node-win
      template:
        metadata:
          labels:
            app: csi-azurefile-node-win
        spec:
          serviceAccountName: csi-azurefile-node-sa
          tolerations:
            - key: "node.kubernetes.io/os"
              operator: "Exists"
              effect: "NoSchedule"
          nodeSelector:
            kubernetes.io/os: windows
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: type
                        operator: NotIn
                        values:
                          - virtual-kubelet
          priorityClassName: system-node-critical
          containers:
            - name: liveness-probe
              volumeMounts:
                - mountPath: C:\csi
                  name: plugin-dir
              image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.8.0
              args:
                - --csi-address=$(CSI_ENDPOINT)
                - --probe-timeout=3s
                - --health-port=29613
                - --v=2
              env:
                - name: CSI_ENDPOINT
                  value: unix://C:\\csi\\csi.sock
              resources:
                limits:
                  memory: 150Mi
                requests:
                  cpu: 10m
                  memory: 40Mi
            - name: node-driver-registrar
              image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.6.2
              args:
                - --v=2
                - --csi-address=$(CSI_ENDPOINT)
                - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
              livenessProbe:
                exec:
                  command:
                    - /csi-node-driver-registrar.exe
                    - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
                    - --mode=kubelet-registration-probe
                initialDelaySeconds: 60
                timeoutSeconds: 30
              env:
                - name: CSI_ENDPOINT
                  value: unix://C:\\csi\\csi.sock
                - name: DRIVER_REG_SOCK_PATH
                  value: C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\csi.sock
                - name: KUBE_NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
              volumeMounts:
                - name: kubelet-dir
                  mountPath: "C:\\var\\lib\\kubelet"
                - name: plugin-dir
                  mountPath: C:\csi
                - name: registration-dir
                  mountPath: C:\registration
              resources:
                limits:
                  memory: 150Mi
                requests:
                  cpu: 30m
                  memory: 40Mi
            - name: azurefile
              image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.25.1
              imagePullPolicy: IfNotPresent
              args:
                - --v=5
                - --endpoint=$(CSI_ENDPOINT)
                - --nodeid=$(KUBE_NODE_NAME)
                - --kubeconfig=C:\\k\\config
                - --metrics-address=0.0.0.0:29615
              ports:
                - containerPort: 29613
                  name: healthz
                  protocol: TCP
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /healthz
                  port: healthz
                initialDelaySeconds: 30
                timeoutSeconds: 10
                periodSeconds: 30
              env:
                - name: AZURE_CREDENTIAL_FILE
                  valueFrom:
                    configMapKeyRef:
                      name: azure-cred-file
                      key: path-windows
                      optional: true
                - name: CSI_ENDPOINT
                  value: unix://C:\\csi\\csi.sock
                - name: KUBE_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
              volumeMounts:
                - name: kubelet-dir
                  mountPath: "C:\\var\\lib\\kubelet"
                - name: plugin-dir
                  mountPath: C:\csi
                - name: azure-config
                  mountPath: C:\k
                - name: csi-proxy-fs-pipe-v1
                  mountPath: \\.\pipe\csi-proxy-filesystem-v1
                - name: csi-proxy-smb-pipe-v1
                  mountPath: \\.\pipe\csi-proxy-smb-v1
                # these paths are still included for compatibility, they're used
                # only if the node has still the beta version of the CSI proxy
                - name: csi-proxy-fs-pipe-v1beta1
                  mountPath: \\.\pipe\csi-proxy-filesystem-v1beta1
                - name: csi-proxy-smb-pipe-v1beta1
                  mountPath: \\.\pipe\csi-proxy-smb-v1beta1
              resources:
                limits:
                  memory: 200Mi
                requests:
                  cpu: 10m
                  memory: 40Mi
          volumes:
            - name: csi-proxy-fs-pipe-v1
              hostPath:
                path: \\.\pipe\csi-proxy-filesystem-v1
            - name: csi-proxy-smb-pipe-v1
              hostPath:
                path: \\.\pipe\csi-proxy-smb-v1
            # these paths are still included for compatibility, they're used
            # only if the node has still the beta version of the CSI proxy
            - name: csi-proxy-fs-pipe-v1beta1
              hostPath:
                path: \\.\pipe\csi-proxy-filesystem-v1beta1
            - name: csi-proxy-smb-pipe-v1beta1
              hostPath:
                path: \\.\pipe\csi-proxy-smb-v1beta1
            - name: registration-dir
              hostPath:
                path: C:\var\lib\kubelet\plugins_registry\
                type: Directory
            - name: kubelet-dir
              hostPath:
                path: C:\var\lib\kubelet\
                type: Directory
            - name: plugin-dir
              hostPath:
                path: C:\var\lib\kubelet\plugins\file.csi.azure.com\
                type: DirectoryOrCreate
            - name: azure-config
              hostPath:
                path: C:\k
                type: DirectoryOrCreate
kind: ConfigMap
metadata:
  name: azurefiles-csi-crs-cm
